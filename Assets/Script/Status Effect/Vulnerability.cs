using UnityEngine;

public class Vulnerability : StatusEffect
{
    private readonly float damageMultiplier;

    public Vulnerability(GameObject target, float duration, float multiplier) : base(target, duration)
    {
        this.damageMultiplier = multiplier;
    }

    public override void OnApply()
    {
        if (targetHealth != null)
        {
            Debug.Log($"<color=#FF8C00>{targetObject.name} is now VULNERABLE and takes {damageMultiplier * 100}% damage.</color>");
            targetHealth.SetDamageMultiplier(damageMultiplier);
        }
    }

    public override void Tick(float deltaTime)
    {
        base.Tick(deltaTime);
    }

    public override void OnEnd()
    {
        if (targetHealth != null)
        {
            Debug.Log($"<color=grey>Vulnerability on {targetObject.name} has worn off.</color>");
            targetHealth.SetDamageMultiplier(1f); // Restaura el multiplicador a 1x (da√±o normal).
        }
    }
}